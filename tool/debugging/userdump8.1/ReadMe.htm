
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en-us">
<title>User Mode Process Dumper Version 8.1, Release Notes</title>

</head>

<body style="font-family: Tahoma; font-size: 10pt">

<h1><font size="5">Microsoft Support Professionals Toolkit for Windows<br>
User Mode Process Dumper Version 8.1<br>
Release Notes</font></h1>

<hr><p style="margin-top: -1px"><b><br>
<span lang="ja">February</span> <span lang="ja">26</span>, 200<span lang="ja">7</span><br>
Support Tools Project</b></p>

<h2>1. Introduction</h2>

<blockquote>
 <p>This is the release notes for <b>User Mode Process Dumper </b>(also known as <b>Userdump</b>), <b>Version 8.1 , Build 8.1.2929.<span lang="ja">5</span></b>.</p><p>The User Mode Process Dumper is a tool to generate a 
 user mode process dump (.dmp) by several triggers. The dump file generated by the userdump can be debugged by using a debugger like WinDbg.</p>
</blockquote>

<h2>2. System Requirements</h2>

<h3>2.1 Supported Operating Systems</h3>

<blockquote>
 <ul>
  <li>Windows® 2000 build:2195 SP3,SP4 and SRP</li>
	<li>Windows XP (x86. IPF is no longer supported) build:2600 Golden, SP1 and 
	SP2</li>
	<li>Windows XP (x64) build:3790 SP1 and SP2</li>
	<li>Windows Server 2003 (x86): build 3790 Golden , SP1, R2 and SP2</li>
	<li>Windows Server 2003 (IPF): build 3790 Golden , SP1, SP2</li>
	<li>Windows Server 2003 (x64): build 3790 SP1, R2 and SP2 </li>
 </ul>
	<blockquote>
		<p>*IPF = Itanium Processor family</p>
 </blockquote><p>Note: Only released versions of OS are supported. <b>User Mode Process Dumper</b> depends on OS internal code and data structures. Because of this, it is not generally guaranteed to run on Beta versions 
of OS.</p>
</blockquote>

<h3>2.2 Debugger Requirements</h3>

<blockquote>
 <p>This <b>User Mode Process Dumper</b> release has been tested with <a href="http://go.microsoft.com/fwlink/?LinkID=8708">Debugging Tools for Windows</a> Version 6.5.3.8., but later versions of <b>windbg</b> may 
also work with the dump files generated by <b>userdump</b>. </p>
</blockquote>

<h2>3. What’s Changed in Version 8.1</h2>

<blockquote>
 <p>There are following new or changed features in Version 8.1 since Version 8.0 release.</p>
 <ul>
  <li>Userdum is now fully compatible with Windows Server 2003 SP2 and Windows 
	XP x64 Edition SP2. Previously, Process Monitoring did not function on SP2 
	of these operating systems. The same problem also occurred if a hotfix for 
	KB919341 or KB909613 was applied to SP1 of these operating systems. This 
	problem has been fixed. .</li>
	<li>System crash problem on Windows 2000 SP4 has been fixed. Bugcheck 0x1E (BucketID 
	= userdump!ExtractImageFileName+26) could happen when a process monitored by 
	Exit Monitor went to zombie state (the process is not alive but still 
	remains in the system process list) and another process attempted to 
	terminate the process in zombie state. Exit Monitor no longer dumps 
	processes in zombie state in this case as they don’t have any meaningful 
	memory image. 
  </li>
	<li>Process Exception Monitoring couldn&#39;t catch certain exceptions, for example, <code><b>C0000142</b></code>(DLL Initialization Failed) on Windows Server 2003 SP1. This problem has been fixed. 
  </li>
  <li>A new global switch that controls the behavior of how Process Exception Monitoring handles exceptions raised by RaiseException() is introduced. If a DWORD registry value <b><code>
  IgnoreRaiseExceptionMode</code></b> is created under <b><code>\HKLM\SYSTEM\CurrentConotrolSet\Services\udmpdrvr</code></b> and assigned non-zero value, Process Exception Monitoring behaves like 
  V8.0. That is, if this global switch is set, Process Exception Monitoring ignores exceptions raised by RaiseException() when &quot;Ignore exceptions that occur inside Kernel32.dll&quot; switch is set for the 
  process. If this DWORD value is not defined or assigned zero, then Process Exception Monitoring always catches exceptions raised by RaiseException() regardless of &quot;Ignore exceptions that occur 
  inside Kernel32.dll&quot; switch.</li>
  <li><code><b>Userdump.exe</b></code> caused access violation if a non privileged user tried to capture other user&#39;s process memory image from command prompt. This problem has been fixed. </li>
  <li>Process Monitoring function was not working properly if no physical keyboard was connected. This problem has been fixed.</li>
  <li>You couldn’t specify a directory name which contains one or more multi-bytes characters in the userdump control panel dialog box. This problem has been fixed.</li>
  <li>Thread time information is added to the dump file by default so that debugger extension !runaway works. </li>
  <li><span lang="EN-US" style="font-size: 10.0pt; font-family: Tahoma">Also added all other meaningful <code>MiniDumpWriteDump()</code> options available in <code><b>dbghelp.dll</b></code> V6.4.7.1</span></li>
  <li>Comment stream is added to the dump file indicating that the dump file was generated by <code><b>userdump.exe</b></code>. Comment includes Computer Name and how <code><b>userdump.exe</b></code> was launched&nbsp; (e.g. standalone, hotkey, exception 
  monitor ,or exit monitor). </li>
  <li><span lang="EN-US" style="font-size: 10.0pt; font-family: Tahoma">New </span><b><span lang="EN-US" style="font-family: ＭＳ ゴシック"><font size="2"><code>userdump.exe -W</code></font></span></b><span 
  lang="EN-US" style="font-size: 10.0pt; font-family: Tahoma"> option is added to add Window handle information. </span><b><span lang="EN-US" style="font-family: ＭＳ ゴシック"><font size="2"><code>udext.dll</code></font></span></b><span lang="EN-US" style="font-size: 10.0pt; font-family: Tahoma"> debugger extension DLL is provided to see this information by debugger to debug the dump file</span>. 
  </li>
  <li>EXEs and DLLs are now installed to <code><b>%windir%\system32\kktools\ </b></code><span lang="EN-US" style="font-size: 10.0pt; font-family: Tahoma">folder and this location is added to system 
  path.</span></li>
  <li><code><b>Userdump.exe</b></code> is linked with <b><code>dbghelp.dll </code></b>dynamically for x86, too. You now need <code><b>userdump.exe</b></code> and <code><b>dbghelp.dll</b></code> 
  provided with <code><b>userdump.exe</b></code> even in command line mode. The same <code><b>dbghelp.dll</b></code> is also installed for full-featured mode. </li>
  <li><code><b>Userdump.exe</b></code> no longer uses system provided <code><b>dbghelp.dll</b></code> on x64 and IPF. Instead, <code><b>dbghelp.dll</b></code> provided with <b>userdump</b> is always used on all platforms – x86, 
  x64, and IPF. </li>
  <li>Process Monitoring and Hot Key snapshot support long process names up to 32 bytes. </li>
  <li>Process Monitoring supports &quot;Switch the dumper&quot; option to specify an alternative dumper such as <code><b>sqldumper.exe</b></code>. </li>
  <li>Process Exit Monitoring supports dumping both a process being killed and a process who called <code>NtTerminateProcess()</code> in the cross-process termination scenario. </li>
  <li>Process Exit Monitoring allows to specify either Complete minidump, Small minidump, or No dump . </li>
  <li>Process Exception Monitoring allows to specify Complete minidump or Small minidump. </li>
  <li>Process Exception Monitoring can catch exceptions raised by calling <code>RaiseException() </code>in WOW64 processes. </li>
  <li>Process Exception Monitoring always catches exceptions raised by <code>RaiseException()</code> regardless of &quot;Ignore exceptions that occur inside Kernel32.dll&quot; switch. </li>
  <li><span lang="EN-US" style="font-size: 10.0pt; font-family: Tahoma">The control panel applet was refined for better GUI</span>.</li>
  <li><span lang="EN-US" style="font-size: 10.0pt; font-family: Tahoma">Non-privileged users can no longer launch the control panel applet.</span></li>
  <li>Improved event logging to log at the beginning and the end of dumping and indicates process names/PIDs.<br>&nbsp;</li>
 </ul>
</blockquote>
<h2>4. Known Issues and Restrictions</h2>

<blockquote>
 <p>There are following known issues and restrictions in this release.</p>
 <ul>
  <li>&quot;Dump on Process Termination&quot; is implemented by hooking into the System Service Table, but x64 <a href="http://go.microsoft.com/fwlink/?LinkId=38447">Windows does not allow this type of hooking</a>. Thus, 
 &quot;Dump on termination&quot; is not supported on x64 systems. </li>
  <li>If kernel image file is specified in boot.ini by <code><b>/kernel</b></code> option with non-default name, <code><b>userdump.sys</b></code> will not be loaded. You can’t use <span lang="EN-US" 
  style="font-size: 10.0pt; font-family: Tahoma">“Process Monitoring” and “Hot Key”</span> features. [PS #2031] </li>
  <li>When a USB keyboard is connected as a console, the keyboard will become inactive if you perform the followings:<ol>
   <li>You use Hot Key dump feature on the USB keyboard</li>
   <li>You connect to the machine from a Remote Desktop terminal</li>
   <li>You disconnect the Remote Desktop session</li>
  </ol>
  <p>At this point, the console USB keyboard will not be functioning. Should this happen, you should unplug the USB keyboard once, then plug in again to reactivate the keyboard. However, <b>userdump</b> 
  Hot Key dump feature will not be reactivated because of another restriction listed below as PS#1877.<br>
  [PS #2056] </li>
  <li>If you turn on “Dump on Process Termination” functionality, <code><b>userdump.sys</b></code> hooks into system’s <code>TerminateProcess</code> function (<code>NtTerminateProcess</code>) and all the process’s termination will be routed via 
  <code><b>userdump.sys</b></code>. Then if you enable Driver Verifier against <code><b>userdump.sys</b></code>, any user mode application who called <code>TerminateProcess</code> function with invalid handle could cause bugcheck C4. This is by design. 
 You can find a faulty application’s name in the stack trace of the crash context. Please plan carefully when you use “Dump on Process Termination” feature. [PS #1678] </li>
  <li>If you unplug and plug in USB keyboard, Hot Key dump feature stops working. This is the restriction since Phase 3. There is no plan to remove this restriction currently. [PS#1877] </li>
  <li>If “bugcheck” option was specified for Hot Key dumping, event log message &quot;Finished writing user-mode minidump&quot; (event ID:#404) is not recorded because bugcheck will occur before recording such event log. 
  This is by design.[PS#2289] </li>
  <li>If you install and/or enable the IA-32 Execution Layer (IA-32 EL) on Itanium-based systems and monitoring WOW64 application exceptions, <b>userdump</b> will not generate appropriate dump files 
  that can be debugged unless the exception is raised by <code>RaiseException()</code>. A workaround is to disable IA-32 EL. [PS #2262]</li>
  <li><span lang="EN-US" style="font-size: 10.0pt; font-family: Tahoma">In general, it is recommended that you use 32-bit version of <code><b>userdump.exe</b></code>&nbsp; (command only mode) to dump WOW64 applications on 
  Itanium-based systems. 64-bit version of userdump.exe may not always generate appropriate dump files for WOW64 applications on Itanium-based systems even if IA-32</span><span 
  style="font-size: 10.0pt; font-family: ＭＳ Ｐゴシック">　</span><span lang="EN-US" style="font-size: 10.0pt; font-family: Tahoma">EL is disabled. In case of Process Monitoring, you can place and specify a 
  path to 32-bit version of userdump.exe in “Switch the Dumper” option. [PS #2263]</span></li>
  <li>A user can specify directory location where dump files are generated by <code><b>–D</b></code> option. That directory name must not contain spaces. This is restriction of current version.[PS 
  #2316] </li>
 </ul>
</blockquote>
<h2>4. License</h2>
<blockquote>
 <p>The Software License Terms for the tool is located at <code><b>\license</b></code> folder. Please make sure to read the License Terms and accept it before using the tool in this package.</p>
 <ul>
  <li><code><a href="license">\license</a></code> </li>
 </ul>
</blockquote>
<h2>5. User Documentation</h2>

<blockquote>
 <ul>
  <li><a href="userdump.chm">User Mode Process Dumper</a></li>
 </ul>
</blockquote>
<h2>6. Acknowledgements</h2>
<blockquote>
 <p>Microsoft Support Professionals Toolkit for Windows is produced under a joint innovation program between Microsoft and its partners, and are owned and released by Microsoft. Microsoft would like to express 
 special thanks to the following Microsoft partners who participated in the Phase 8 joint program (listed in the alphabetical order):</p>
 <ul>
  <li>Fujitsu Limited. </li>
  <li>Hitachi, Ltd. </li>
  <li>Nihon Unisys, Ltd. </li>
  <li>NTT Data Corporation </li>
  <li>Toshiba Corporation </li>
 </ul>
</blockquote>
<h2>6. Support Policy</h2>

<blockquote>
 <p>The software supplied in the Microsoft Support Professionals Toolkit for Windows is not supported under any Microsoft standard support program or service. Customers can, however, report issues and bugs 
 by sending e-mail to <a href="mailto:wtinput@microsoft.com">wtinput@microsoft.com</a> Microsoft will, at its sole discretion, address issues and bugs reported in this manner, and responses are not 
 guaranteed. This e-mail address is only for issues related to the Microsoft Support Professionals Toolkit for Windows. This support policy of the tools is subject to change without notice.</p>
</blockquote>

<hr><p style="margin-top: -1px">Copyright © 200<span lang="ja">7</span> Microsoft Corporation. All rights reserved.<br>
&nbsp;</p>

