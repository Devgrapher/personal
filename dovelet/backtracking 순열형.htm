
<!-- saved from url=(0090)http://211.228.163.31/30stair/backtracking_fac/backtracking_fac.php?pname=backtracking_fac -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-949">
      <title>backtracking 순열형</title>
      
      <link rel="stylesheet" type="text/css" href="./backtracking 순열형_files/main.css">

	  <link href="./backtracking 순열형_files/shCore.css" rel="stylesheet" type="text/css"> 
	  <link href="./backtracking 순열형_files/shThemeDefault.css" rel="stylesheet" type="text/css"> 

	  <script src="./backtracking 순열형_files/shCore.js" type="text/javascript"></script> 
	  <script src="./backtracking 순열형_files/shBrushCpp.js" type="text/javascript"></script>

	  <script language="javascript"> 
	    SyntaxHighlighter.config.bloggerMode = true;
	    SyntaxHighlighter.config.clipboardSwf = '/scripts/clipboard.swf';
	    SyntaxHighlighter.all();
	  </script> 


<script>

function f()
{
   var doc=document.getElementById('duri');

   if ( doc.style.display == 'none' ) {
      doc.style.display='block';
   }else {
      doc.style.display='none';
   }

}

function g()
{
   var doc=document.getElementById('zzi');

   if ( doc.style.display == 'none' ) {
      doc.style.display='block';
   }else {
      doc.style.display='none';
   }

}
</script>

   </head>
   <body>

<h2>순열 형(factorial) 백트래킹</h2>

<blockquote>
(문제) 1,2,...,9 에서 4 개를 뽑아 줄을 세울수 있는 경우를 모두 출력하는 문제를 생각해보자.
9P4( 9 permutation 4)

<p><img src="./backtracking 순열형_files/perm1.png">

</p><p>9^4 개 중에서 앞에서 사용된 수를 제외한 나열을  출력하는 방법.

</p><ul>
<li> 두리번 방법: 수를 넣은 후 이 수가 앞에서 사용된 것인지를 판단 
</li><li> 찌리리 방법: 수를 넣을 필요가 없음 . 두리번 방법보다 효율이 좋음
</li></ul>

<h4>1.두리번 방법</h4>

<blockquote>

팩토리얼 형태를 발생시키면서 가능하지 않는 경우에는 확장을 하지 않는다.

<pre>1 2 3 4
1 2 4 3
....
</pre>


<img src="./backtracking 순열형_files/col.gif"><p>


</p><p style="cursor:pointer;text-decoration:underline" onclick="f();">두리번 소스▼ 

</p><div id="duri" style="display:none">
<div><div id="highlighter_170810" class="syntaxhighlighter  c"><div class="toolbar"><span><a href="http://211.228.163.31/30stair/backtracking_fac/backtracking_fac.php?pname=backtracking_fac#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c preprocessor">#include &lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1"><code class="c preprocessor">#define N 9</code></div><div class="line number3 index2 alt2"><code class="c preprocessor">#define R 4&nbsp; // N permutation R</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="c color1 bold">int</code> <code class="c plain">a[5];</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="c color1 bold">int</code> <code class="c plain">promising(</code><code class="c color1 bold">int</code> <code class="c plain">r)</code></div><div class="line number8 index7 alt1"><code class="c plain">{</code></div><div class="line number9 index8 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code> <code class="c plain">i;</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i=1;i &lt; r;i++){</code></div><div class="line number12 index11 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(a[i] == a[r]) </code><code class="c keyword bold">return</code> <code class="c plain">0;</code><code class="c comments">// 전에 a[r] 에 있는 수가 있는 지를&nbsp; check ...</code></div><div class="line number13 index12 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number14 index13 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code> <code class="c plain">1;</code></div><div class="line number15 index14 alt2"><code class="c plain">}</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="c keyword bold">void</code> <code class="c plain">perm(</code><code class="c color1 bold">int</code> <code class="c plain">r)</code></div><div class="line number18 index17 alt1"><code class="c plain">{</code></div><div class="line number19 index18 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code> <code class="c plain">i;</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(promising(r)==1){</code></div><div class="line number22 index21 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(r==R) {</code></div><div class="line number23 index22 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i=1;i &lt;= R;i++){</code></div><div class="line number24 index23 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">printf</code><code class="c plain">(</code><code class="c string">"%d "</code><code class="c plain">,a[i]);</code></div><div class="line number25 index24 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number26 index25 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">printf</code><code class="c plain">(</code><code class="c string">"\n"</code><code class="c plain">);</code></div><div class="line number27 index26 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code><code class="c plain">;</code></div><div class="line number28 index27 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number29 index28 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i=1;i &lt;= N;i++){</code></div><div class="line number30 index29 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">a[r+1] = i;&nbsp;&nbsp; </code></div><div class="line number31 index30 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">perm(r+1); </code></div><div class="line number32 index31 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number33 index32 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number34 index33 alt1"><code class="c plain">}</code></div><div class="line number35 index34 alt2">&nbsp;</div><div class="line number36 index35 alt1">&nbsp;</div><div class="line number37 index36 alt2"><code class="c color1 bold">int</code> <code class="c plain">main()</code></div><div class="line number38 index37 alt1"><code class="c plain">{</code></div><div class="line number39 index38 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c plain">perm(0);</code></div><div class="line number40 index39 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code> <code class="c plain">0;</code></div><div class="line number41 index40 alt2"><code class="c plain">}</code></div></div></td></tr></tbody></table></div></div>
</div>

</blockquote>


<h4>2. 찌리리 방법</h4>

<blockquote>
어떤 수가 사용되지 않았으면 1 로 체크 후 다음 레벨로 , 이 레벨에서 빠져 나올 때 다시 0
으로 clear 하는 방법 .....

<p style="cursor:pointer;text-decoration:underline" onclick="g();">찌리리 소스▼ 
</p></blockquote>


<div id="zzi" style="display:none">
<div><div id="highlighter_931945" class="syntaxhighlighter  c"><div class="toolbar"><span><a href="http://211.228.163.31/30stair/backtracking_fac/backtracking_fac.php?pname=backtracking_fac#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c preprocessor">#include &lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1"><code class="c preprocessor">#define N 9</code></div><div class="line number3 index2 alt2"><code class="c preprocessor">#define R 4</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="c color1 bold">int</code> <code class="c plain">check[10]; </code><code class="c comments">//check[i] 가 1 이면 사용중 , 아니면 사용가능 </code></div><div class="line number6 index5 alt1"><code class="c color1 bold">int</code> <code class="c plain">a[5];</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="c keyword bold">void</code> <code class="c plain">perm(</code><code class="c color1 bold">int</code> <code class="c plain">r)</code></div><div class="line number9 index8 alt2"><code class="c plain">{</code></div><div class="line number10 index9 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code> <code class="c plain">i;</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code><code class="c plain">(r&gt;R){</code></div><div class="line number13 index12 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i=1;i &lt;= R;i++){</code></div><div class="line number14 index13 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">printf</code><code class="c plain">(</code><code class="c string">"%d "</code><code class="c plain">,a[i]);</code></div><div class="line number15 index14 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number16 index15 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">printf</code><code class="c plain">(</code><code class="c string">"\n"</code><code class="c plain">);</code></div><div class="line number17 index16 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code><code class="c plain">;</code></div><div class="line number18 index17 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number19 index18 alt2">&nbsp;</div><div class="line number20 index19 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i=1;i &lt;= N;i++){</code></div><div class="line number21 index20 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(check[i]==0){ </code><code class="c comments">//사용가능 </code></div><div class="line number22 index21 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">check[i]=1;&nbsp;&nbsp;&nbsp; </code><code class="c comments">//사용중으로 set</code></div><div class="line number23 index22 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">a[r]=i;</code></div><div class="line number24 index23 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">perm(r+1);</code></div><div class="line number25 index24 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">check[i]=0;&nbsp;&nbsp;&nbsp; </code><code class="c comments">//사용가능으로 clear</code></div><div class="line number26 index25 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number27 index26 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number28 index27 alt1"><code class="c plain">}</code></div><div class="line number29 index28 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number30 index29 alt1">&nbsp;</div><div class="line number31 index30 alt2"><code class="c color1 bold">int</code> <code class="c plain">main()</code></div><div class="line number32 index31 alt1"><code class="c plain">{</code></div><div class="line number33 index32 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c plain">perm(1);</code></div><div class="line number34 index33 alt1"><code class="c plain">}</code></div></div></td></tr></tbody></table></div></div>
</div>

</blockquote>

<hr>
<a href="http://211.228.163.31/judgeonline/showmessage.php?pname=backtracking_fac">[질/답]</a>
<div align="right">
<a href="http://211.228.163.31/index.php">[홈으로]</a>&nbsp;&nbsp;<a href="javascript:history.go(-1)">[뒤 로]</a>
</div>

   

</body></html>