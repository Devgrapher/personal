
<!-- saved from url=(0078)http://211.228.163.31/30stair/dijkstra_doc/dijkstra_doc.php?pname=dijkstra_doc -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-949">
      <title>다익스트라 최단거리...문서</title>
      
      <link rel="stylesheet" type="text/css" href="./다익스트라 최단거리...문서_files/main.css">
	  <link href="./다익스트라 최단거리...문서_files/shCore.css" rel="stylesheet" type="text/css"> 
	  <link href="./다익스트라 최단거리...문서_files/shThemeDefault.css" rel="stylesheet" type="text/css"> 
	  <script src="./다익스트라 최단거리...문서_files/shCore.js" type="text/javascript"></script> 
	  <script src="./다익스트라 최단거리...문서_files/shBrushCpp.js" type="text/javascript"></script>

	  <script language="javascript"> 
	    SyntaxHighlighter.config.bloggerMode = true;
	    SyntaxHighlighter.config.clipboardSwf = '/scripts/clipboard.swf';
	    SyntaxHighlighter.all();
	  </script> 
   </head>
   <body>

<h2>dijkstra 최단 거리</h2>

<blockquote style="font-style:oblique">
정점 간의 비용이 다르고  음수가 아닌 경우  한 정점에서 모든 정점으로 최단거리를 구하는 
최단거리 알고리즘이다. 아래의 문서는 1 번 정점을 시작정점으로 가정한 후의 설명과 구현이다. 
</blockquote>

<pre class="src">차례:
  -<a href="http://211.228.163.31/30stair/dijkstra_doc/dijkstra_doc.php?pname=dijkstra_doc#con" class="A3">개념</a>
  -<a href="http://211.228.163.31/30stair/dijkstra_doc/dijkstra_doc.php?pname=dijkstra_doc#imp" class="A3">구현</a>
  -<a href="http://211.228.163.31/30stair/dijkstra_doc/dijkstra_doc.php?pname=dijkstra_doc#time" class="A3">시간 복잡도</a>
</pre>


<h4><a name="con">1. 개념</a> </h4>

<blockquote>
1 번 정점을 시작 정점으로 하여 모든 정점으로의 최단 경로를 구하는 문제를 생각해보자.

<p><img src="./다익스트라 최단거리...문서_files/dijkstra.jpeg" align="center">

</p><h5>초기 상태</h5>

<table border="1">
   <tbody><tr>
      <th> 정점 </th>
   
      <th> 완료 유무 </th>
       
      <th> 1 번 정점에서 거리 </th> 
      
      <th> 아버지 정점 </th>
   </tr>

   <tr align="center">
      <td> 1 </td>

      <td> 완료  </td>
      
      <td> 0 </td> 
      
      <td> 0 </td>
   </tr>

   <tr align="center">
      <td> 2 </td>

      <td> No </td>
      
      <td> 7 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center">
      <td> 3 </td>

      <td> No </td>
      
      <td> 4 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center">
      <td> 4 </td>

      <td> No </td>
      
      <td> 6 </td> 
      
      <td> 1 </td>
   </tr>


   <tr align="center">
      <td> 5 </td>

      <td> No </td>
      
      <td> 1 </td> 
      
      <td> 1 </td>
   </tr>

</tbody></table>
<h5>단계 1 --- </h5>
<table border="1">
   <tbody><tr>
      <th> 정점 </th>
   
      <th> 완료 유무 </th>
       
      <th> 1 번 정점에서 거리 </th> 
      
      <th> 아버지 정점 </th>
   </tr>

   <tr align="center">
      <td> 1 </td>

      <td> 완료  </td>
      
      <td> 0 </td> 
      
      <td> 0 </td>
   </tr>

   <tr align="center">
      <td> 2 </td>

      <td> No </td>
      
      <td> 7 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center">
      <td> 3 </td>

      <td> No </td>
      
      <td> 4 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center">
      <td> 4 </td>

      <td> No </td>
      
      <td> 6 </td> 
      
      <td> 1 </td>
   </tr>


   <tr align="center">
      <td> 5 </td>

      <td> 완료 </td>
      
      <td> 1 </td> 
      
      <td> 1 </td>
   </tr>

</tbody></table>

<p>1 번 정점에서의 갈수 있는 길 중 최단 경로는 5 번 정점이다. 

</p><p><font size="5">이 길은 1 번 정점에서 5 번 정점으로의
   최단 경로이다.음수가 없다면 돌아서 오는 길이 더 짧은 길이 될 수 없다.</font>

</p><h5>단계 2 --- </h5>

<table>

   <tbody><tr>
      <td>
   
<table border="1">
   <tbody><tr>
      <th> 정점 </th>
   
      <th> 완료 유무 </th>
       
      <th> 1 번 정점에서 거리 </th> 
      
      <th> 아버지 정점 </th>
   </tr>

   <tr align="center">
      <td> 1 </td>

      <td> 완료  </td>
      
      <td> 0 </td> 
      
      <td> 0 </td>
   </tr>

   <tr align="center">
      <td> 2 </td>

      <td> No </td>
      
      <td> 7 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center">
      <td> 3 </td>

      <td> No </td>
      
      <td> 4 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center">
      <td> 4 </td>

      <td> No </td>
      
      <td bgcolor="#cccccc"> 2 </td> 
      
      <td bgcolor="#cccccc"> 5 </td>
   </tr>


   <tr align="center">
      <td> 5 </td>

      <td> 완료 </td>
      
      <td> 1 </td> 
      
      <td> 1 </td>
   </tr>

</tbody></table>

</td>
<td>

<table border="1">
   <tbody><tr>
      <th> 정점 </th>
   
      <th> 완료 유무 </th>
       
      <th> 1 번 정점에서의 거리 </th> 
      
      <th> 아버지 정점 </th>
   </tr>

   <tr align="center">
      <td> 1 </td>

      <td> 완료  </td>
      
      <td> 0 </td> 
      
      <td> 0 </td>
   </tr>

   <tr align="center">
      <td> 2 </td>

      <td> No </td>
      
      <td> 7 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center">
      <td> 3 </td>

      <td> No </td>
      
      <td> 4 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center" bgcolor="#cccccc">
      <td> 4 </td>

      <td> 완료  </td>
      
      <td> 2 </td> 
      
      <td> 5 </td>
   </tr>


   <tr align="center">
      <td> 5 </td>

      <td> 완료 </td>
      
      <td> 1 </td> 
      
      <td> 1 </td>
   </tr>

</tbody></table>
</td>
</tr>
</tbody></table>

<p>5 번 정점에서는 2 3 4 번 정점 중에서 4 번 정점으로 갈수 있고 , 
5 번 정점까지의 크기 (1) + 5 번 정점에서 4 번 정점으로의 길의 크기(1) 이 1 번 정점에서 4 번 정점까지의
크기 6 보다 작기때문에 소스에서의 거리와 아버지 정점을 갱신 

</p><p> 완료 정점을 제외한 거리중에서 최소 정점 4 가 선택. 

</p><h5>단계 3 ---</h5>

<table>
   <tbody><tr>
      <td>
<table border="1">
   <tbody><tr>
      <th> 정점 </th>
   
      <th> 완료 유무 </th>
       
      <th> 1 번 정점에서 거리 </th> 
      
      <th> 아버지 정점 </th>
   </tr>

   <tr align="center">
      <td> 1 </td>

      <td> 완료  </td>
      
      <td> 0 </td> 
      
      <td> 0 </td>
   </tr>

   <tr align="center">
      <td> 2 </td>

      <td> No </td>
      
      <td bgcolor="#cccccc"> 5 </td> 
      
      <td bgcolor="#cccccc"> 4 </td>
   </tr>

   <tr align="center">
      <td> 3 </td>

      <td> No </td>
      
      <td> 4 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center">
      <td> 4 </td>

      <td> 완료  </td>
      
      <td> 2 </td> 
      
      <td> 5 </td>
   </tr>


   <tr align="center">
      <td> 5 </td>

      <td> 완료 </td>
      
      <td> 1 </td> 
      
      <td> 1 </td>
   </tr>

</tbody></table>
</td>

<td>

<table border="1">
   <tbody><tr>
      <th> 정점 </th>
   
      <th> 완료 유무 </th>
       
      <th> 1 번 정점에서 거리 </th> 
      
      <th> 아버지 정점 </th>
   </tr>

   <tr align="center">
      <td> 1 </td>

      <td> 완료  </td>
      
      <td> 0 </td> 
      
      <td> 0 </td>
   </tr>

   <tr align="center">
      <td> 2 </td>

      <td> No </td>
      
      <td> 5 </td> 
      
      <td> 4 </td>
   </tr>

   <tr align="center" bgcolor="#cccccc">
      <td> 3 </td>

      <td> 완료 </td>
      
      <td> 4 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center">
      <td> 4 </td>

      <td> 완료  </td>
      
      <td> 2 </td> 
      
      <td> 5 </td>
   </tr>


   <tr align="center">
      <td> 5 </td>

      <td> 완료 </td>
      
      <td> 1 </td> 
      
      <td> 1 </td>
   </tr>

</tbody></table>

</td>
</tr>
</tbody></table>

<p> 4 번 정점에서 2 번 정점으로 가는 길이 5 , 7 보다 더 작으므로 갱신 

</p><p> 완료되지 않는 길 중 최소인 정점은 3 번 정점 

</p><h5>단계 4 ---</h5>

<table>
   <tbody><tr>
      <td>

<table border="1">
   <tbody><tr>
      <th> 정점 </th>
   
      <th> 완료 유무 </th>
       
      <th> 1 번 정점에서 거리 </th> 
      
      <th> 아버지 정점 </th>
   </tr>

   <tr align="center">
      <td> 1 </td>

      <td> 완료  </td>
      
      <td> 0 </td> 
      
      <td> 0 </td>
   </tr>

   <tr align="center">
      <td> 2 </td>

      <td> No </td>
      
      <td> 5 </td> 
      
      <td> 4 </td>
   </tr>

   <tr align="center">
      <td> 3 </td>

      <td> 완료 </td>
      
      <td> 4 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center">
      <td> 4 </td>

      <td> 완료  </td>
      
      <td> 2 </td> 
      
      <td> 5 </td>
   </tr>


   <tr align="center">
      <td> 5 </td>

      <td> 완료 </td>
      
      <td> 1 </td> 
      
      <td> 1 </td>
   </tr>

</tbody></table>

</td>

<td>

<table border="1">
   <tbody><tr>
      <th> 정점 </th>
   
      <th> 완료 유무 </th>
       
      <th> 1 번 정점에서 거리 </th> 
      
      <th> 아버지 정점 </th>
   </tr>

   <tr align="center">
      <td> 1 </td>

      <td> 완료  </td>
      
      <td> 0 </td> 
      
      <td> 0 </td>
   </tr>

   <tr align="center" bgcolor="#cccccc">
      <td> 2 </td>

      <td> 완료 </td>
      
      <td> 5 </td> 
      
      <td> 4 </td>
   </tr>

   <tr align="center">
      <td> 3 </td>

      <td> 완료 </td>
      
      <td> 4 </td> 
      
      <td> 1 </td>
   </tr>

   <tr align="center">
      <td> 4 </td>

      <td> 완료  </td>
      
      <td> 2 </td> 
      
      <td> 5 </td>
   </tr>


   <tr align="center">
      <td> 5 </td>

      <td> 완료 </td>
      
      <td> 1 </td> 
      
      <td> 1 </td>
   </tr>

</tbody></table>

</td>
</tr>
</tbody></table>

3 번 정점에서 2 번정점으로 가는 길이 있지만 기존에 있는 길의 크기가 더 작으므로 갱신 되지 않음 .

<p> 마지막으로 2 번 정점 선택 

</p></blockquote>

<h4><a name="imp">2. 구현</a></h4>

<blockquote>

소스
<div><div id="highlighter_530257" class="syntaxhighlighter  c"><div class="toolbar"><span><a href="http://211.228.163.31/30stair/dijkstra_doc/dijkstra_doc.php?pname=dijkstra_doc#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c preprocessor">#include &lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="c preprocessor">#define MAX 101</code></div><div class="line number4 index3 alt1"><code class="c color1 bold">int</code> <code class="c plain">mat[MAX][MAX];</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="c keyword bold">struct</code> <code class="c plain">n</code></div><div class="line number7 index6 alt2"><code class="c plain">{</code></div><div class="line number8 index7 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">bool</code> <code class="c plain">visited;</code></div><div class="line number9 index8 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code> <code class="c plain">distant;</code></div><div class="line number10 index9 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code> <code class="c plain">parents;</code></div><div class="line number11 index10 alt2"><code class="c plain">};</code></div><div class="line number12 index11 alt1"><code class="c keyword bold">struct</code> <code class="c plain">n node[MAX];</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="c color1 bold">int</code> <code class="c plain">main()</code></div><div class="line number15 index14 alt2"><code class="c plain">{</code></div><div class="line number16 index15 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code> <code class="c plain">n,a,b,m,i,j,min,min_node,p;</code></div><div class="line number17 index16 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number18 index17 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//입력</code></div><div class="line number19 index18 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">scanf</code><code class="c plain">(</code><code class="c string">"%d"</code><code class="c plain">,&amp;n);</code></div><div class="line number20 index19 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">while</code><code class="c plain">(</code><code class="c functions bold">scanf</code><code class="c plain">(</code><code class="c string">"%d %d %d"</code><code class="c plain">,&amp;a,&amp;b,&amp;m) == 3)</code></div><div class="line number21 index20 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">mat[a][b] = m; </code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//초기화 </code></div><div class="line number24 index23 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i = 1; i &lt;= n; i++){</code></div><div class="line number25 index24 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">node[i].visited = </code><code class="c keyword bold">false</code><code class="c plain">;</code></div><div class="line number26 index25 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">node[i].distant = 0x7fffffff;</code><code class="c comments">//초기값으로 최대값</code></div><div class="line number27 index26 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">node[i].parents = 0;</code></div><div class="line number28 index27 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number29 index28 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">node[1].distant = 0;</code></div><div class="line number30 index29 alt1">&nbsp;</div><div class="line number31 index30 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//처리 </code></div><div class="line number32 index31 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(p = 1; p &lt;= n; p++){ </code><code class="c comments">// n 번 반복 .. 한 번 반복시 마다 최단거리 정점이 하나씩 결정</code></div><div class="line number33 index32 alt2">&nbsp;</div><div class="line number34 index33 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//최대값 찾기</code></div><div class="line number35 index34 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">min = 0x7fffffff;</code></div><div class="line number36 index35 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i = 1; i &lt;= n; i++){</code></div><div class="line number37 index36 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code><code class="c plain">(node[i].visited == </code><code class="c keyword bold">false</code> <code class="c plain">&amp;&amp; min &gt; node[i].distant){</code></div><div class="line number38 index37 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">min = node[i].distant;</code></div><div class="line number39 index38 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">min_node = i;</code></div><div class="line number40 index39 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number41 index40 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">} </code></div><div class="line number42 index41 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">node[min_node].visited = </code><code class="c keyword bold">true</code><code class="c plain">;</code></div><div class="line number43 index42 alt2">&nbsp;</div><div class="line number44 index43 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//이 정점을 경유하는 것이 최소이면 갱신</code></div><div class="line number45 index44 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i = 1; i &lt;= n; i++){</code></div><div class="line number46 index45 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code><code class="c plain">(mat[min_node][i] != 0 &amp;&amp; node[i].distant&gt;mat[min_node][i]+node[min_node].distant){</code></div><div class="line number47 index46 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">node[i].distant = mat[min_node][i]+node[min_node].distant;</code></div><div class="line number48 index47 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">node[i].parents = min_node;</code></div><div class="line number49 index48 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number50 index49 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number51 index50 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number52 index51 alt1">&nbsp;</div><div class="line number53 index52 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c comments">//출력</code></div><div class="line number54 index53 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c plain">...</code></div><div class="line number55 index54 alt2">&nbsp;</div><div class="line number56 index55 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code> <code class="c plain">0;</code></div><div class="line number57 index56 alt2"><code class="c plain">} </code></div></div></td></tr></tbody></table></div></div>

</blockquote>

<h4><a name="time">3. 시간 복잡도</a></h4>

<blockquote>
O(n^2)
</blockquote>


<pre class="src">출처:dovelet
</pre>
      
<hr>
<a href="http://211.228.163.31/judgeonline/showmessage.php?pname=dijkstra_doc">[질/답]</a>
<div align="right">
<a href="http://211.228.163.31/index.php">[홈으로]</a>&nbsp;&nbsp;<a href="javascript:history.go(-1)">[뒤 로]</a>
</div>

   

</body></html>