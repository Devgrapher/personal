
<!-- saved from url=(0060)http://211.228.163.31/30stair/us_doc/us_doc.php?pname=us_doc -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-949">
      <title>up sequence 문서</title>
      
      <link rel="stylesheet" type="text/css" href="./up sequence 문서_files/main.css">
	  <link href="./up sequence 문서_files/shCore.css" rel="stylesheet" type="text/css"> 
	  <link href="./up sequence 문서_files/shThemeDefault.css" rel="stylesheet" type="text/css"> 
	  <script src="./up sequence 문서_files/shCore.js" type="text/javascript"></script> 
	  <script src="./up sequence 문서_files/shBrushCpp.js" type="text/javascript"></script>

	  <script language="javascript"> 
	    SyntaxHighlighter.config.bloggerMode = true;
	    SyntaxHighlighter.config.clipboardSwf = '/scripts/clipboard.swf';
	    SyntaxHighlighter.all();
	  </script> 
</head>
   
   <body>

   <h3> up sequence 문서 </h3>

   <blockquote style="font-style:italic">
   이런 유형의 다이나믹 프로그래밍이 처음에는 이해가 쉽지 않습니다. 
   하지만 다이나믹 프로그래밍 접근 하는 방법에서 중요한 부분이니 꼭 이해하세요.
   </blockquote>

다음 데이터에서 up sequece 를 구하여 보자.

<blockquote>
6 2 9 8 3 4 1 7 4
</blockquote>


6 2 9 8 3 4 1 까지는 눈으로 최대 up sequece 길이를 구하면

<ul>
<li> 6 은 1 
</li><li> 2 는 1
</li><li> 9 는 2 ( 6 9 혹은 2 9 )
</li><li> 8 은 2 ( 6 8 혹은 2 8 )
</li><li> 3 은 2 ( 2 3 )
</li><li> 4 는 3 ( 2 3 4 )
</li><li> 1 은 1
</li></ul>

7 에서 설명 합니다.
7 앞에 올수 있는 후보수는 그림에서 체크된 수 입니다.

<p><img src="./up sequence 문서_files/up.png">

</p><p>이 중 최대 길이에 7 을 붙이는게 최대.
이 경우에는 4 가 3 으로 최대이므로 7 의 최대 up sequence 의 길이는 4 가 됩니다.

</p><p>다음 수 4 도 같은 방법으로 확장 합니다.

</p><p>구한 up sequence 중에 최대 값이 최대 up sequence.

</p><p>소스
</p><div><div id="highlighter_409583" class="syntaxhighlighter  c"><div class="toolbar"><span><a href="http://211.228.163.31/30stair/us_doc/us_doc.php?pname=us_doc#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c keyword bold">for</code><code class="c plain">(i = 1;i &lt;= 데이터의 개수 ;i++){</code></div><div class="line number2 index1 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c plain">max = 0;</code></div><div class="line number3 index2 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(j = i-1; j &gt;= 1;j--)</code></div><div class="line number4 index3 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(data[i] &gt; data[j]) </code><code class="c comments">// j 번째 데이터가 i 번째 데이터보다 작으면 </code></div><div class="line number5 index4 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(max &lt; m[j] ) max=m[j];</code></div><div class="line number6 index5 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c plain">up[i] = max+1;</code></div><div class="line number7 index6 alt2"><code class="c plain">}</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="c comments">//최대 up sequence 구하기 ans</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="c plain">ans = up[1];</code></div><div class="line number12 index11 alt1"><code class="c keyword bold">for</code><code class="c plain">( i = 2 ; i &lt;= 데이터의 개수;i++){</code></div><div class="line number13 index12 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">( ans &lt; up[i] ) ans = up[i];</code></div><div class="line number14 index13 alt1"><code class="c plain">}</code></div></div></td></tr></tbody></table></div></div>

<h4> 분석 </h4>

시간 복잡도는 O(n^2) 이고 binary indexed tree 를 이용하여 O(nlogn)으로도 가능.
          
<pre class="src">출처:dovelet
</pre>
      
<hr>
<a href="http://211.228.163.31/judgeonline/showmessage.php?pname=us_doc">[질/답]</a>
<div align="right">
<a href="http://211.228.163.31/index.php">[홈으로]</a>&nbsp;&nbsp;<a href="javascript:history.go(-1)">[뒤 로]</a>
</div>

   

</body></html>