
<!-- saved from url=(0069)http://211.228.163.31/30stair/btrie_doc/btrie_doc.php?pname=btrie_doc -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-949">
   <title>이진 trie</title>
   
   <link rel="stylesheet" type="text/css" href="./이진 trie_files/main.css">
   <link href="./이진 trie_files/shCore.css" rel="stylesheet" type="text/css"> 
   <link href="./이진 trie_files/shThemeDefault.css" rel="stylesheet" type="text/css"> 
   <script src="./이진 trie_files/shCore.js" type="text/javascript"></script> 
   <script src="./이진 trie_files/shBrushCpp.js" type="text/javascript"></script>

   <script language="javascript"> 
   SyntaxHighlighter.config.bloggerMode = true;
   SyntaxHighlighter.config.clipboardSwf = '/scripts/clipboard.swf';
   SyntaxHighlighter.all();
   </script> 
</head>

<body>


   <h3>이진 trie(btrie)</h3>
<div style="font-style:oblique">
   이진 트라이 라 읽고 , retrieval(검색)의 reTRIEval 
</div>

   <blockquote>
   문제로 이해해 봅시다.

  <p>아래와  같은 0 혹은 1 을 가지는 패턴 표가 주어지고,

</p><pre style="letter-spacing:3;border:1 solid;font-family:arial;width:300;padding:9px">p1=10
p2=111
p3=11010
p4=11
p5=0
p6=1000
p7=100000
p8=100001
</pre>

110 이 주어질 때  <b>주어진 문자열의 앞 부분(prefix)과 최대로 많이 일치하는 패턴</b>은?... p4 ....

<p>1011 이 주어질 때 이 문자열의 앞 부분과 최대로 많이 일치하는 패턴은? 
.... p1...

</p><p>
</p><div style="text-decoration:underline">유제.</div>
<ol>
<li> 10001011 이 주어질 때? 
<span style="background:black;">p6</span>
<p></p></li><li>11010101 이 주어질때?
<span style="background:black;">p3</span>
</li></ol>

<p>어떻게 구현하나??
</p></blockquote>

<h4> 1.막 하기 </h4>

<blockquote>
아마 눈으로 한 방법대로 하면 O(n^3) 정도로 구현 할 수 있습니다.
</blockquote>

<h4> 2.binary trie 사용</h4>

<blockquote>
이 패턴 표를 가지고 0 은 왼쪽으로 1 은 오른쪽으로 가면서 이진 트리를 구축 합니다. (linked list 사용)
터미널 노드는 패턴의 번호를 가집니다.

<ul>
<li> p1=10 구축하기 
<p><img src="./이진 trie_files/btrie1.gif">
</p></li><li> p2=111 구축하기 
<p><img src="./이진 trie_files/btrie2.gif">
</p></li><li> p3=11010 구축하기 
<p><img src="./이진 trie_files/btrie3.gif">
</p></li><li>...
</li></ul>
</blockquote>

구축 후 입력으로 주어진 텍스트를 가지고 구축해 놓은 이진 trie 를 더 이상 따라갈 때가 없거나 혹은
텍스트의 끝일 때 까지 가면서 각 트라이에 저장 해둔 상태 정보를 읽어오면 됩니다. 끝 노드가
아닌 경우에는 0 아닌 경우에는 어떤 패턴의 숫자를 기억해 두었어니 그 정보만 읽어 내면 됩니다.

<h4>분석</h4>

<ul>
<li>패턴 테이블을 btrie 로 구축 O(n^2) 
</li><li>패턴 찾는 것:O(n)
</li></ul>

<p><img src="./이진 trie_files/therefore.gif">시간 복잡도는 O(n^2) 

</p><p>소스:
</p><div><div id="highlighter_20536" class="syntaxhighlighter  c"><div class="toolbar"><span><a href="http://211.228.163.31/30stair/btrie_doc/btrie_doc.php?pname=btrie_doc#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div><div class="line number67 index66 alt2">67</div><div class="line number68 index67 alt1">68</div><div class="line number69 index68 alt2">69</div><div class="line number70 index69 alt1">70</div><div class="line number71 index70 alt2">71</div><div class="line number72 index71 alt1">72</div><div class="line number73 index72 alt2">73</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c keyword bold">struct</code> <code class="c plain">node</code></div><div class="line number2 index1 alt1"><code class="c plain">{</code></div><div class="line number3 index2 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">struct</code> <code class="c plain">node *lchild,*rchild;</code></div><div class="line number4 index3 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code> <code class="c plain">data;</code></div><div class="line number5 index4 alt2"><code class="c plain">};</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="c keyword bold">struct</code> <code class="c plain">node *root;</code></div><div class="line number8 index7 alt1"><code class="c color1 bold">FILE</code> <code class="c plain">*fp1,*fp2;</code></div><div class="line number9 index8 alt2"><code class="c color1 bold">int</code> <code class="c plain">last_state;</code><code class="c comments">// 답 </code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="c comments">//binary trie 구축 </code></div><div class="line number12 index11 alt1"><code class="c comments">//패턴은 table.txt 파일에 저장되어 있다고 함.</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="c keyword bold">void</code> <code class="c plain">init()</code></div><div class="line number15 index14 alt2"><code class="c plain">{</code></div><div class="line number16 index15 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">char</code> <code class="c plain">buffer[35];</code></div><div class="line number17 index16 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code> <code class="c plain">n = 1,i;</code></div><div class="line number18 index17 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">struct</code> <code class="c plain">node *p,*q;</code></div><div class="line number19 index18 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number20 index19 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">fp1 = </code><code class="c functions bold">fopen</code><code class="c plain">(</code><code class="c string">"table.txt"</code><code class="c plain">,</code><code class="c string">"r"</code><code class="c plain">);</code></div><div class="line number21 index20 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number22 index21 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">root = (</code><code class="c keyword bold">struct</code> <code class="c plain">node*)</code><code class="c functions bold">calloc</code><code class="c plain">(1,</code><code class="c keyword bold">sizeof</code><code class="c plain">(</code><code class="c keyword bold">struct</code> <code class="c plain">node));</code></div><div class="line number23 index22 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">while</code> <code class="c plain">(</code><code class="c functions bold">fgets</code><code class="c plain">(buffer,131,fp1)! =&nbsp; NULL) {</code></div><div class="line number24 index23 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">q = root;</code></div><div class="line number25 index24 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i = 0;buffer[i]!=</code><code class="c string">'\n'</code><code class="c plain">;i++){</code></div><div class="line number26 index25 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">p = q;</code></div><div class="line number27 index26 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(buffer[i] = =</code><code class="c string">'1'</code><code class="c plain">) q = q-&gt;rchild; </code></div><div class="line number28 index27 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">else</code> <code class="c plain">q = q-&gt;lchild;</code></div><div class="line number29 index28 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(q == NULL){</code></div><div class="line number30 index29 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">q = (</code><code class="c keyword bold">struct</code> <code class="c plain">node*)</code><code class="c functions bold">calloc</code><code class="c plain">(1,</code><code class="c keyword bold">sizeof</code><code class="c plain">(</code><code class="c keyword bold">struct</code> <code class="c plain">node));</code></div><div class="line number31 index30 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(buffer[i] == </code><code class="c string">'1'</code><code class="c plain">) p-&gt;rchild = q;</code></div><div class="line number32 index31 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">else</code> <code class="c plain">p-&gt;lchild = q;</code></div><div class="line number33 index32 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number34 index33 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number35 index34 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">q-&gt;data = n;</code></div><div class="line number36 index35 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">n++;</code></div><div class="line number37 index36 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number38 index37 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">fclose</code><code class="c plain">(fp1);</code></div><div class="line number39 index38 alt2"><code class="c plain">}</code></div><div class="line number40 index39 alt1">&nbsp;</div><div class="line number41 index40 alt2"><code class="c comments">//구축된 binary trie 사용해서 막힌 곳이 나올때 까지 따라감.</code></div><div class="line number42 index41 alt1"><code class="c keyword bold">void</code> <code class="c plain">process()</code></div><div class="line number43 index42 alt2"><code class="c plain">{</code></div><div class="line number44 index43 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">char</code> <code class="c plain">buffer[2001];</code></div><div class="line number45 index44 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code> <code class="c plain">i;</code></div><div class="line number46 index45 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">struct</code> <code class="c plain">node *p;</code></div><div class="line number47 index46 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number48 index47 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">fp2 = </code><code class="c functions bold">fopen</code><code class="c plain">(</code><code class="c string">"input.txt"</code><code class="c plain">,</code><code class="c string">"r"</code><code class="c plain">);</code></div><div class="line number49 index48 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">fgets</code><code class="c plain">(buffer,10001,fp2);</code></div><div class="line number50 index49 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number51 index50 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">p = root;</code></div><div class="line number52 index51 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i = 0;buffer[i]!=</code><code class="c string">'\n'</code><code class="c plain">;i++){</code></div><div class="line number53 index52 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code><code class="c plain">(buffer[i] == </code><code class="c string">'1'</code><code class="c plain">) p = p-&gt;rchild;</code></div><div class="line number54 index53 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">else</code> <code class="c plain">p = p-&gt;lchild;</code></div><div class="line number55 index54 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(p&nbsp; == NULL) </code><code class="c keyword bold">break</code><code class="c plain">;</code></div><div class="line number56 index55 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(p-&gt;data != 0) last_state = p-&gt;data;</code></div><div class="line number57 index56 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number58 index57 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">fclose</code><code class="c plain">(fp2);</code></div><div class="line number59 index58 alt2"><code class="c plain">}</code></div><div class="line number60 index59 alt1">&nbsp;</div><div class="line number61 index60 alt2"><code class="c comments">//답 출력</code></div><div class="line number62 index61 alt1"><code class="c keyword bold">void</code> <code class="c plain">output()</code></div><div class="line number63 index62 alt2"><code class="c plain">{</code></div><div class="line number64 index63 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">printf</code><code class="c plain">(</code><code class="c string">"%d\n"</code><code class="c plain">,last_state);</code></div><div class="line number65 index64 alt2"><code class="c plain">}</code></div><div class="line number66 index65 alt1">&nbsp;</div><div class="line number67 index66 alt2"><code class="c color1 bold">int</code> <code class="c plain">main()</code></div><div class="line number68 index67 alt1"><code class="c plain">{</code></div><div class="line number69 index68 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">init();</code></div><div class="line number70 index69 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">process();</code></div><div class="line number71 index70 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">output();</code></div><div class="line number72 index71 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code> <code class="c plain">0;</code></div><div class="line number73 index72 alt2"><code class="c plain">}</code></div></div></td></tr></tbody></table></div></div>

* 웬지 이 문서가 조금 허전 합니다. 이 내용에 대해 아시는 분 추가 좀 해 주셨으면...

<pre class="src">출처:dovelet
</pre>
      
<hr>
<a href="http://211.228.163.31/judgeonline/showmessage.php?pname=btrie_doc">[질/답]</a>
<div align="right">
<a href="http://211.228.163.31/index.php">[홈으로]</a>&nbsp;&nbsp;<a href="javascript:history.go(-1)">[뒤 로]</a>
</div>

   

</body></html>