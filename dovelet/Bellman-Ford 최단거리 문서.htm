
<!-- saved from url=(0078)http://211.228.163.31/30stair/bellman_ford/bellman_ford.php?pname=bellman_ford -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=windows-949">
      <title>Bellman-Ford 최단거리 문서</title>

      
      <link rel="stylesheet" type="text/css" href="./Bellman-Ford 최단거리 문서_files/main.css">

	  <link href="./Bellman-Ford 최단거리 문서_files/shCore.css" rel="stylesheet" type="text/css"> 
	  <link href="./Bellman-Ford 최단거리 문서_files/shThemeDefault.css" rel="stylesheet" type="text/css"> 
	  <script src="./Bellman-Ford 최단거리 문서_files/shCore.js" type="text/javascript"></script> 
	  <script src="./Bellman-Ford 최단거리 문서_files/shBrushCpp.js" type="text/javascript"></script>

	  <script language="javascript"> 
	    SyntaxHighlighter.config.bloggerMode = true;
	    SyntaxHighlighter.config.clipboardSwf = '/scripts/clipboard.swf';
	    SyntaxHighlighter.all();
	  </script> 
   </head>
   <body>
// 작업 중............
   <h2> Bellman-Ford 최단 거리 문서 </h2>

   최단거리 문제에서 음수 사이클이 존재하면 사이클을 돌면 돌수록 최단거리가 만들어 지므로 최단거리를 
   개념자체 존재하지 않는다.

   <p>또한 dijkstra 방법은 음수 가중치만 있는 경우에도 사용할수가 없다.

</p><p>이 번에 알아볼 Bellman-Ford 알고리즘은 음수 가중치를 가지는 그래프에서 음수 사이클이 존재하는 경우 이를 알아낼수 있는 알고리즘이다.
방법은 dynamic programming 을 이용한다.  일반적으로 많이 이용하는 dp 접근 방법을 이용하니 dp 를 모르는 분들도 겸사겸사 한 번 해 보면 좋을듯.

</p><h3> 샘플 문제 </h3>

1 번 정점을 시작 정점으로 하여 모든 정점으로의 최단거리 문제를 생각해 보자.

<p><img src="./Bellman-Ford 최단거리 문서_files/bf2.gif">

</p><p>이 경우 1 -&gt; 2 -&gt; 3 -&gt; 1 로 가면 음수이다. 이 경우 최단거리의 의미가 없으므로 음수 사이클을 인식하고 
아닌 경우 최단거리를 구하는 프로그램을 구하려고 한다.

</p><p> 설명을 위해 다음과 같이 가정 

</p><ul>
<li>정점수 n = 4
</li><li>출발 정점 1
</li><li> w[][] 각 정점간의 비용을 저장 즉 , w[2][3] = 3 , w[4][3]=6,....
</li></ul>

<ul>
<li>먼저 점화 식 m[i][j] 는 <b>출발지에서 i 개의 vertex 를 고려한 j 로 도착하는 최단 경로 </b>
</li><li> 최종적으로  출발지에서 도착지 k 로의 최단 경로는 m[4][k] 가 된다.(<img src="./Bellman-Ford 최단거리 문서_files/because.gif"> n = 4 )
</li></ul>

<p>초기화

</p><pre>m[1,1]=0 
m[1,2] , m[1,3] , m[1,4] 는 나올수 없는 경우
</pre>

<p>점화식.
</p><ul>
<li> m[2][4]?  2 개의 정점을 고려한 도착지가 4 인 경우 최단거리 
<pre>m[2,4] 는 m[1][1] + w[1][4]
          m[1][2] + w[2][4]
          m[1][3] + w[3][4]
          m[1][4] + w[4][4]
중 최소값.
</pre>

</li><li> m[3][4]?  3 개의 정점을 고려한 도착지가 4 인 경우 최단거리 
<pre>m[3][4] 는 m[2][1] + w[1][4]
           m[2][2] + w[2][4]
           m[2][3] + w[3][4]
           m[2][4] + w[4][4]
중 최소값.
</pre></li></ul>

그러므로 점화 m[i][j] 는 

<blockquote>
m[i][j] = min( m[i-1][k] + w[k][j] ) 단,k=1,2,...n
</blockquote>

<h5>음수 사이클을 어떻게 인식하나?</h5>

<p>소스
</p><div><div id="highlighter_23014" class="syntaxhighlighter  c"><div class="toolbar"><span><a href="http://211.228.163.31/30stair/bellman_ford/bellman_ford.php?pname=bellman_ford#" class="toolbar_item command_help help">?</a></span></div><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c keyword bold">void</code> <code class="c plain">process()</code></div><div class="line number2 index1 alt1"><code class="c plain">{</code></div><div class="line number3 index2 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code> <code class="c plain">i,j,k,min;</code></div><div class="line number4 index3 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c comments">// 초기화 </code></div><div class="line number6 index5 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i=0;i &lt;= n;i++)</code></div><div class="line number7 index6 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(j=0;j &lt;= n;j++)</code></div><div class="line number8 index7 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">d[i][j]=100; </code><code class="c comments">//즉&nbsp; d[i][j] = ∞</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c plain">d[0][src]=0;</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i=1;i &lt;= n;i++)</code></div><div class="line number13 index12 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(j=1;j &lt;= n;j++){</code></div><div class="line number14 index13 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">min=1000;</code></div><div class="line number15 index14 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(k=1;k &lt;= n;k++)</code></div><div class="line number16 index15 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(d[i-1][k]+w[k][j] &lt; min) </code></div><div class="line number17 index16 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">min=d[i-1][k]+w[k][j];</code></div><div class="line number18 index17 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">d[i][j]=min;</code></div><div class="line number19 index18 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number20 index19 alt1"><code class="c plain">}</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="c keyword bold">void</code> <code class="c plain">output()</code></div><div class="line number23 index22 alt2"><code class="c plain">{</code></div><div class="line number24 index23 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code> <code class="c plain">i,j;</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c comments">//음수 사이클 check </code></div><div class="line number27 index26 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i=1;i &lt;= n;i++)</code></div><div class="line number28 index27 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(j=1;j &lt;= n;j++)</code></div><div class="line number29 index28 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code> <code class="c plain">(d[4][i]+w[i][j] &lt; d[4][j] ){</code></div><div class="line number30 index29 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">printf</code><code class="c plain">(</code><code class="c string">"negative cycle\n"</code><code class="c plain">);</code></div><div class="line number31 index30 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code><code class="c plain">;</code></div><div class="line number32 index31 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number33 index32 alt2">&nbsp;</div><div class="line number34 index33 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c comments">//최단 거리 </code></div><div class="line number35 index34 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">for</code><code class="c plain">(i=1;i &lt;= n;i++){</code></div><div class="line number36 index35 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">printf</code><code class="c plain">(</code><code class="c string">"%4d"</code><code class="c plain">,d[n][i]);</code></div><div class="line number37 index36 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number38 index37 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;</code><code class="c functions bold">printf</code><code class="c plain">(</code><code class="c string">"\n"</code><code class="c plain">);</code></div><div class="line number39 index38 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number40 index39 alt1"><code class="c plain">}</code></div></div></td></tr></tbody></table></div></div>

- 시간 복잡도 : 

<pre class="src">출처:dovelet
</pre>
      
<hr>
<a href="http://211.228.163.31/judgeonline/showmessage.php?pname=bellman_ford">[질/답]</a>
<div align="right">
<a href="http://211.228.163.31/index.php">[홈으로]</a>&nbsp;&nbsp;<a href="javascript:history.go(-1)">[뒤 로]</a>
</div>

   

</body></html>